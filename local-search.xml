<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>声音的重现-阅读笔记（一）</title>
    <link href="/2024/10/07/%E5%A3%B0%E9%9F%B3%E7%9A%84%E9%87%8D%E7%8E%B0-%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2024/10/07/%E5%A3%B0%E9%9F%B3%E7%9A%84%E9%87%8D%E7%8E%B0-%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>对这本书有点兴趣，于是乎阅读一番，并开启此系列，做一些笔记。</p><h1 id="引言部分"><a href="#引言部分" class="headerlink" title="引言部分"></a>引言部分</h1><p>从音频到声音的重现包含了诸多的情感与智慧，要理解这一过程是极具挑战性的，因为它涵盖的领域充满了矛盾：人类多方面的感知与设备系统和技术性能之间的碰撞。其主观方面具有复杂性、灵活性、适应性，偶尔还兼具多变性。技术方面的特点包括设备强大的重现能力、性能的稳定性以及测量数据的可靠性等。</p><p>声音重放涉及很多场景，包括音乐节目、谈话节目、电影、电视、游戏的配音等等。在这些场景中，将传声器信号进行简单重放根本不能重现现场体验，必须要进行一定的处理。其第一个步骤是选择适当的传声器，并小心地布置在相关表演者的位置。第二个步骤是将录制的信号以多轨方式储存，然后按照适当比例进行混音。第三个步骤是在混录的过程中，采用多个物理或者虚拟旋钮，以增加或减少特定频率的能量，同时增添多种延时和混响等效果，从而提高声音品质。最后由母带工程师完成母带的制作，并转录到CD、DVD等介质上。而在LP密纹唱片母盘制作中，有些处理的幅度是相当大的，例如，单声道低频、动态压缩、唱片中心圈附近的高频衰减以及种种用以应对介质局限性的手段。数字媒体无需这么显著的处理，但是母带工程师回通过监听扬声器来调整动态范围和带宽以适应听众的要求。<strong>在这整个过程中，每个人都在筑造着结果，不能缺少任何环节，这就是艺术创造。</strong> <em>唯一的问题是，在未来当我们在别的地方重放这些节目时，由于种种原因，听到的声音和先前制作的不尽相同，很遗憾这是经常发生的事。</em></p><p>听众情感的源头是艺术本身，是音乐，是电影，而不是音频硬件。很难想象，听众会对扬声器的驱动单元产生情感，但是如果没有好的音频硬件，听觉体验会大打折扣。因为听众无法了解原始声音的真实本质，没有人可以说“这听起来就是它应该有的样子”。但是听众通常会在喜欢与不喜欢的尺度上表达自己的态度，而这些观点往往带有感情色彩。</p><p>因此，诸如愉悦度和偏好度等描述词在评级方面与准确度和保真度—样重要。但这么做可能会破坏原始现场演出的纯粹性。幸运的是，听众可以觉察出非自然声与失真，也可以辨别出作品的好与坏，能够做出毫无偏见的评价。如果对于正确的声音只有模糊概念的话，听众只能辨别什么是错误的。于是“没有问题”变成了“优秀”的衡量标准。在本书结尾，我们可以看到卓越的技术如何同感知上的精确与情感上的满足产生高度联系。当我们进行聆听时，会认识到这—点。</p><p>本书包括以下概念：</p><ul><li>引起听者反应的感知的量度</li><li>理解起主导作用的心理声学法则</li><li>发展录音&#x2F;重放方法与设备，从而将听众反应最好的感受最大化，同时将负面影响最小化</li><li>鼓励产业中的音乐和电影制作及消费级的声音重放共享同样的性能标准和系统结构，从而让听众领略到艺术作品的原始意图</li></ul><h1 id="第一部分-第一章-声音的重现"><a href="#第一部分-第一章-声音的重现" class="headerlink" title="第一部分-第一章 声音的重现"></a>第一部分-第一章 声音的重现</h1><h2 id="1-1-哲学的观点"><a href="#1-1-哲学的观点" class="headerlink" title="1.1 哲学的观点"></a>1.1 哲学的观点</h2><blockquote><p>斯特拉文斯基认为，“和理想的立体声唱片相比，我们如何还会继续喜欢差强人意的现场演出（音乐厅）呢（1962年评论，1973年 Dougharty引用)?”MiltonBabbitt 也有过类似激进的观点:<br>“当人们可以随时坐在家里舒适宜人的环境中欣赏喜爱的音乐时，我很难相信他们还会愿意到音乐厅忍受心智、其他观众以及身体的折磨去捕捉稍纵即逝的现场演奏。就像人们聚集在蹩脚的大厅里阅读投影在屏幕上的小说一样，我无法想象如今的文学将如何发展”(Gould，1966 )。</p></blockquote><p><em>我不认同他的比喻，但这的确是大势所趋，现场在音乐欣赏中所占的比重会显著降低，电子设备回放将会成为绝对主流。</em></p><p>在此我们强调的观点是，“声音重现并不是简单的复制，而是对原始声音不同形式的创新，声音重现的可能性转变了声音的生产方式”( Sterne，2003，220页)。声音制作的过程将引导声音重现进入艺术创造全新的阶段。捕捉“现场”表演的精髓不再是唯一目标。电影将这一理念发展到了相当的高度。声音重现不仅仅是“高度逼真性”，还包括了极富幻想的各个方面。只有想不到没有做不到。一架音量微弱的羽管键琴的声音经过制作，能够和75件乐器组成的管弦乐队的声音相抗衡。</p><p>因此声音重现与人的本能结合在一起去“填补空白”，提供正确的信息以激发人们的感知，使体验更加完善。它绝对不是一个机械的“采集、存储、重现”的过程。除了音乐本身以外，在音乐产品制作过程中，也要使用相当的艺术和技术手段。<br>Sterne ( 2003）进一步解释说，“正如许多电影与摄影评论家所言，真实感是美学创造，就像我们所谈论的其他媒体的作用一样（241页)。”具体到声音录制，“录音远远不是实况的复制，而是一次‘再创作’( 242页)。”录音的目的并非模仿，而是特定的听音体验的创造。显然，这一点在重现声音的方向感和空间感中得以体现。<br>在过去数十年中，人们先从最初的单声道( mono )，后来是立体声( stereo )中获得乐趣。直到近年来才出现了多声道格式的音乐，它在某种程度上为我们带来了更真实的全方位空间感受。由于被音乐和电影中新奇的东西所吸引，社会似乎降低了对它的期望值，人们适应了那些还不够好的格式，并且乐此不疲。新技术的发展要经历“磨合期”才能被人们逐步接受。许多伴随着单声道成长起来的人们早已抛弃或忘记了三维声场，他们常常认为立体声根本没有必要，毫无价值。现在多声道音频方案面临着同样的麻烦。音频专业人士也要经历“磨合期”，他们必须学会用谨慎态度与审美品位使用这些新格式。</p><p>同时人们对于数字音频可能存在缺陷产生了担心。这种担心不是没有道理的。<strong>一些老式模拟磁带转换成了数字格式，而这些并非原版母带，原版母带可能已经遗失或被抹掉重新使用了。LP母带是用来驱动刻刀来制作LP母盘的。似乎当时重要的决策者们认为LP是音频信号传输发展的终点站，于是在母带上应用一些预失真处理弥补LP硬件缺陷，因此在数字设备上播放这些录音时无法取得最好的效果，其艺术性大打折扣。</strong>这是一个关于旧技术向新技术以一种特别的方式逆袭的例子。也许这些都属于形而上学的争论。</p><h2 id="1-2-录音与录制的音乐"><a href="#1-2-录音与录制的音乐" class="headerlink" title="1.2 录音与录制的音乐"></a>1.2 录音与录制的音乐</h2><p>声音重放影响音乐本身。LP唱片的3‘15“长短迫使演奏方式发生改变，为了录音的需要而缩短爵士即兴演奏的时间。艺术家们在表演中多次反复后，这些即兴演奏会变得程式化，实际上不再是即兴演奏了。</p><p>在爵士乐发展过程中形成的早期录音作品也同样遭遇到了录音上的困难。频谱和动态限制使钢琴与鼓等乐器的最好音色无法充分展现，只能使用替代乐器。现场演奏有时也开始使用这些替代乐器，从而影响到了演奏风格。例如,电贝司的打弦就是为了尽量减少令人厌烦的低频，同时保留木贝司的基本音色。<br>Katz( 2004）说:“即使进入20世纪50年代，低音鼓仍然是个难缠的角色( 81页)。”(在录音室通常的处理方法是将其用毛毯包裹起来。)Katz解释如下:<br>“无论在法国、美国或者世界上其他什么地方，大部分听众是通过录音来了解爵士乐的。他们听到的爵士乐，都是根据媒介性质进行过加工处理，在某种程度上是有失真的。因此，录音技术上的优势与限制不仅影响了爵士乐的表演实践，而且影响着听众对爵士乐的理解和期待，这些听众中还有一些是爵士乐的表演者和作曲家〔84页)。”</p><p>录音对古典音乐的影响也不容小觑。在现场表演中，观众静静地等待，音乐家略作停顿，缓举乐弓，身体前倾，然后开始演奏。由于缺少视觉感受，这样的停顿如果出现在录音作品中就成了“沉寂”。所以录音作品中的连续性更强。小提琴演奏中颤音的使用频率比过去有所提高。Katz ( 2004)认为这与录音的影响有关，他在自己写的书中还附上了几张实例CD。</p><p>今天，我们利用其他录音的部分素材来制作新的录音作品。LP时代的DJ发明了“搓盘”技术，将一张唱片放在留声机唱针下面，然后手动控制唱片使一段音乐重复、倒转并变化其速度。它被用于某种风格的音乐中。数字“采样”，就是对已有录音片段的节选，是一些数字键盘乐器中所使用的技术，在许多流行音乐的剪辑中也会使用这种手段。用音乐术语来说，它是抽象或者超现实主义艺术，而无现实来源，完全是录音室中的产物。<br>音乐创作、重放技术与听众的期待与喜好之间将继续相互作用。Katz说:“录音并不是一种驱使用户行为的神秘力量，最终我们能够控制录音的影响。人类应用录音技术已经有一个多世纪了，毋庸置疑，它将继续作为一种重要的音乐力量，人们也将继续面对其优势与不足（191页)。”本书的讨论涉及音频产业、音乐以及电影的发展。我们将通过多种途径改进录音技术，以更卓越更可靠的方式传播艺术作品。我们还将另辟蹊径，力求在艺术中融入新的元素。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>决定一章一期进行更新。下次再见啦。</p>]]></content>
    
    
    <categories>
      
      <category>sounding</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sounding</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EQ学习笔记-1</title>
    <link href="/2024/09/23/EQ%E7%9B%B8%E5%85%B31/"/>
    <url>/2024/09/23/EQ%E7%9B%B8%E5%85%B31/</url>
    
    <content type="html"><![CDATA[<p>开始记录EQ学习的笔记了。</p><p>前两天读了一篇Midifan的文章，讲了EQ的十种常见的使用误区，翻译自<a href="https://www.gearnews.com/the-10-most-common-equalizer-mistakes/">The 10 most common Equalizer Mistakes</a>，有些收获，浅浅地记录一下。顺带一提，原文是从使用误区上说的，强调的是“没有做什么”，我觉得“要做什么”的逻辑更为直白，所以将采用“要做什么”的逻辑记录。</p><h2 id="1-熟悉不同类型的均衡器"><a href="#1-熟悉不同类型的均衡器" class="headerlink" title="1.熟悉不同类型的均衡器"></a>1.熟悉不同类型的均衡器</h2><p>比较基础，但是可以记录一下。</p><p>根据这篇文章，滤波器的种类有以下几个：</p><ul><li>低切滤波器（高通滤波器）。低切滤波器一般用于去除截止频率以下的内容，工作室常见的截止频率大约为80Hz（不包括底鼓贝斯等低频通道）。低频区域可能包含一些低频隆隆声，脚步声等机械噪音，去掉会让声音更干净。</li><li>可调节参数的中频区域EQ（Parametric EQ，可调节参数有Q值、频率、增益&#x2F;衰减，这三个参数决定了钟形曲线的宽度位置以及高度，因为调节的形状是钟形曲线，所以也叫钟形滤波器）</li><li>高频搁架滤波器（high shelf，用于高频提升）。一般用于声音的甜美化（超高频区域的些许增益，这部分也被称为空气声）。</li></ul><h2 id="2-消除录音的谐波震动频率"><a href="#2-消除录音的谐波震动频率" class="headerlink" title="2. 消除录音的谐波震动频率"></a>2. 消除录音的谐波震动频率</h2><p>每个乐器和麦克风都有一定的共振频率，在录音的时候形成<strong>共振峰</strong>。这种共振峰会积蓄大量的能量，掩蔽掉信号的其他部分，进而影响乐器音色。所以，如果用麦克风录音的话，一定先找一找录音里面有没有共振峰，并对其进行衰减。这种衰减过程一般使用Parametric EQ来进行。如果能听出来某个频率有问题最好，不能的话也可以利用窄带宽EQ扫频来寻找<strong>相对更刺耳</strong>的频点。然后削减3-6dB的量就差不多。</p><h2 id="3-不要随意给某个元素的某个频段增益"><a href="#3-不要随意给某个元素的某个频段增益" class="headerlink" title="3. 不要随意给某个元素的某个频段增益"></a>3. 不要随意给某个元素的某个频段增益</h2><p>时刻注意你提升的某个频段是否会掩盖掉其他乐器的重要音色部分。文中提到：</p><blockquote><p>处理混音的第一步应该是实现透明且平衡的混音。得到这个目标最简单的方式通常不是增强你想要听到的声音，而是使用前文中描述的方法减弱你不想听到的声音。</p></blockquote><h2 id="4-要注意到频率间的空隙"><a href="#4-要注意到频率间的空隙" class="headerlink" title="4. 要注意到频率间的空隙"></a>4. 要注意到频率间的空隙</h2><p>我们在真实世界中用耳朵聆听声音的时候，能够准确地分辨来自不同方向、发出不同声音的自然声源。但是现在大部分数字音乐文件都是立体声。要在两个维度里把所有的乐器安排好，让他们都能被清楚听到，是很有挑战性的事情。只有立体声相和深度可以调整。</p><p>尤其是对于底鼓和贝斯这两个乐器来说，挤在立体声里可能很容易出现问题，因为他们声相通常位于中心并且频率相近。假设底鼓的共振频率为80Hz，贝斯音色特征频率在60Hz，那么可能他们都无法被清晰地听到，并且变得浑浊。</p><p>所以需要给他们的频率之间留下间隙。在上述例子中，我们可以试着在60Hz处对贝斯进行削减并在50Hz处给点增益，对80Hz的底鼓进行衰减，增益给到100Hz，这样频率分离得更开，就能更好地共存（原文用的融合，但比起融合，我觉得共存更贴切，而且我很怀疑这个频率的例子，他到底在混哪种音乐）。</p><p>他也给了一个表，常见的频率分布范围，暂且放在这里：</p><table><thead><tr><th><strong>乐器名称</strong></th><th><strong>频率范围</strong></th></tr></thead><tbody><tr><td>演唱型人声</td><td>80 Hz - 12 kHz</td></tr><tr><td>说话语音，基础频率（男声）</td><td>120 Hz</td></tr><tr><td>说话语音，基础频率（女声）</td><td>240 Hz</td></tr><tr><td>辅音</td><td>1.6 - 6 kHz</td></tr><tr><td>嘶嘶声</td><td>5 - 8 kHz</td></tr><tr><td>低音鼓 (腔体共振)</td><td>50 - 150 Hz</td></tr><tr><td>低音鼓 (敲击声)</td><td>1 - 4 kHz</td></tr><tr><td>军鼓 (持续音)</td><td>80 - 500 Hz</td></tr><tr><td>军鼓 (线圈)</td><td>谐波高至 12 kHz</td></tr><tr><td>踩镲 Hi-hat</td><td>高至 15 kHz</td></tr><tr><td>筒鼓 Toms (持续音)</td><td>70 - 120 Hz</td></tr><tr><td>筒鼓 Toms (触发音)</td><td>高至 7 kHz</td></tr><tr><td>钹 Cymbals</td><td>高至 20 kHz</td></tr><tr><td>原声吉他 (基础频率)</td><td>82 - 1174 Hz</td></tr><tr><td>原声吉他 (谐波频率)</td><td>高至 12 kHz</td></tr><tr><td>电吉他，音箱拾音 (基础频率)</td><td>82 - 1174 Hz</td></tr><tr><td>电吉他，音箱拾音 (谐波频率)</td><td>高至 7 kHz</td></tr><tr><td>电贝斯（四弦，基础频率）</td><td>41 - 343 Hz</td></tr><tr><td>电贝斯（四弦，谐波频率）</td><td>高至 5 kHz</td></tr></tbody></table><h2 id="5-不要过度处理"><a href="#5-不要过度处理" class="headerlink" title="5. 不要过度处理"></a>5. 不要过度处理</h2><p>“当你过多地使用EQ的时候，声音不一定会变得更好”。EQ最初发明的时候是要成为一种矫正工具的，主要用于处理在录音过程中造成的失真。而不是一种声音调整的工具。</p><p>不过，如果将EQ作为效果器使用，那么本条就无关紧要了。</p><h2 id="6-过度提升高频"><a href="#6-过度提升高频" class="headerlink" title="6. 过度提升高频"></a>6. 过度提升高频</h2><blockquote><p>人声应该在混音中处于最重要的位置，吉他段落应该融入混音中，军鼓需要听起来有冲击力。想要得到这些结果非常的简单 —— 只需要把所有的高频都调大即可，不幸的是，这可能正是造成灾难的源头。</p><p>提高人声轨道中的高频意味着提高嘶嘶声中的 “嘶” 音。如果对这些内容的高频进行过度地提升，这个声音会变得非常烦人，需要使用 de-esser 来对其进行修复。同样地，如果高频提升过多，钹和镲片会听起来非常的刺耳，会使你的混音失去平衡。这就是为什么应该控制自己想要在所有的轨道中提升高频的想法。</p></blockquote><h2 id="7-不要提升原始音频中不存在的频率（一般都不会吧）"><a href="#7-不要提升原始音频中不存在的频率（一般都不会吧）" class="headerlink" title="7. 不要提升原始音频中不存在的频率（一般都不会吧）"></a>7. 不要提升原始音频中不存在的频率（一般都不会吧）</h2><blockquote><p>如果你尝试提升低音鼓 12 kHz 位置的频率，很可能不会得到任何变化 —— 当然也不会影响低音鼓的音色。那是因为这个乐器在这个频率范围内并不包含任何有用的音色信息。EQ 均衡器仅应该用来提升源信号中已经存在的频率。提升其它频率（如低音鼓中的高频）只会让其产生更多的噪音和失真，因为你所做的只是增加信号的底噪，无法对原始音色进行调整，同时还浪费了一个可以用于其它用途的 EQ 频段。</p></blockquote><h2 id="8-不要在录音过程中过度使用EQ"><a href="#8-不要在录音过程中过度使用EQ" class="headerlink" title="8. 不要在录音过程中过度使用EQ"></a>8. 不要在录音过程中过度使用EQ</h2><p>很简单，保留原始材料，你后面想怎么修怎么修，先修过了，再想换方法就不可能了。</p><h2 id="9-正确地使用图形EQ均衡器"><a href="#9-正确地使用图形EQ均衡器" class="headerlink" title="9. 正确地使用图形EQ均衡器"></a>9. 正确地使用图形EQ均衡器</h2><p>他说的图形EQ是这种：</p><p><img src="/img/EQ%E7%9B%B8%E5%85%B31/6519_1663595471_thumb.jpg" alt="图形EQ均衡器1"></p><p>很像播放器给你提供的那种EQ，只能调整固定频点上的增益。</p><blockquote><p>与参数 EQ 均衡器相反，图形均衡器 主要用于现场声音应用场景中的 房间补偿 和 反馈回授抑制。不太适合在工作室场景中对单一信号进行处理。</p><p>图形 EQ 之所以被称之为 “图形（graphic）”，因为它们对整体 EQ 曲线提供了便捷的可视化显示。典型的 1&#x2F;3 倍八度音阶的均衡器提供了 31 个可调整的 EQ 频段，每个频段都配备了独立的衰减&#x2F;提升滑块。与参数均衡器相比，你无法将频段选择到特定的频率上。一种常见的解决方法是对想要调整的频率点周围的频段进行调整，在所需调整的频率周围形成一条小曲线。<br>图形均衡器还有另外一个主要的缺点：一旦将其插入至信号流中，信号总是会通过 31 个滤波器阵列进行处理，因为独立的频段无法单独停用。因此，每个频段都有可能会增加一点噪声、失真和相位偏移，这些结果都会累加并最终反应在整体的信号中。</p><p>现场音频工程师依靠图形均衡器来调整 PA 系统以适应现场环境特点，或用来防止监听扬声器的反馈及回授。由于前文中所描述的缺点，它们不太适合用来做录音和混音工作。</p></blockquote><h2 id="10-不要过度依赖EQ曲线的视觉显示"><a href="#10-不要过度依赖EQ曲线的视觉显示" class="headerlink" title="10. 不要过度依赖EQ曲线的视觉显示"></a>10. 不要过度依赖EQ曲线的视觉显示</h2><p>多用耳朵去听，聆听才是最重要的。</p>]]></content>
    
    
    <categories>
      
      <category>mixing</category>
      
      <category>EQ</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mixing</tag>
      
      <tag>EQ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记录一次TombRaider卡死的处理</title>
    <link href="/2022/01/27/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1TombRaider%E5%8D%A1%E6%AD%BB%E7%9A%84%E5%A4%84%E7%90%86/"/>
    <url>/2022/01/27/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1TombRaider%E5%8D%A1%E6%AD%BB%E7%9A%84%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>@<a href="%E7%9B%AE%E5%BD%95">TOC</a></p><h1 id="记录一次TombRaider卡死的处理"><a href="#记录一次TombRaider卡死的处理" class="headerlink" title="记录一次TombRaider卡死的处理"></a>记录一次TombRaider卡死的处理</h1><ul><li>适用场景<br>  该处理方法适用于任何无法鼠标操作但是可以键盘输入的情景</li></ul><h2 id="情景"><a href="#情景" class="headerlink" title="情景"></a>情景</h2><ol><li>古墓丽影卡死，并且窗口置顶，<code>Alt</code>+<code>F4</code>也无法停止，任务管理器无置顶，所以无法用鼠标操作强制关闭TombRaider</li><li>任务栏可以置顶，并且悬停有正常的预览界面</li></ol><h2 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h2><p>使用<code>powershell</code>+进程管理相关命令解决</p><ol><li><p>我的情况可以开始点击<code>terminal</code>（Windows商店的一个终端，很好用），然后开始下一步。更普适的解决方案可能是<code>Win</code>+<code>R</code>调出“运行”，然后输入”powershell”（”cmd”应该也行），运行。</p></li><li><p>命令为</p> <figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">Get-<span class="hljs-built_in">Process</span> -Name <span class="hljs-string">&quot;Tomb*&quot;</span> | Stop-<span class="hljs-built_in">Process</span><br></code></pre></td></tr></table></figure></li><li><p>命令不需要我解释，不懂含义并感兴趣的请自行谷歌。</p></li></ol><p>问题解决。</p>]]></content>
    
    
    <categories>
      
      <category>log</category>
      
      <category>bug</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bug</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vscode intellisense not working vscode 语法检查 工作不正常 [bug记录]</title>
    <link href="/2021/06/10/c-intellisense/"/>
    <url>/2021/06/10/c-intellisense/</url>
    
    <content type="html"><![CDATA[<p>@<a href="%E7%9B%AE%E5%BD%95">TOC</a></p><h1 id="c-c-intellisense-not-working"><a href="#c-c-intellisense-not-working" class="headerlink" title="c&#x2F;c++ intellisense not working"></a>c&#x2F;c++ intellisense not working</h1><h1 id="项目场景："><a href="#项目场景：" class="headerlink" title="项目场景："></a>项目场景：</h1><p>Vscode版本：1.56.2</p><p>我在使用<code>Vscode</code>进行<code>c/c++</code>开发</p><p>我同时在使用<code>Gitlens</code>插件，并在一个<code>Workspace</code>中进行操作</p><h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>此时在<code>vscode</code>中，c&#x2F;c++插件的<code>Intellisense</code>模块工作不正常，无法实时分析你的代码问题并显示到<code>Problems</code>中。</p><h1 id="原因分析："><a href="#原因分析：" class="headerlink" title="原因分析："></a>原因分析：</h1><p>我尝试过很多办法，配置<code>compilerPath</code>,<code>C_Cpp.default.intelliSenseMode</code>,更换各种编译器等等，都无法解决。直到我将目光投向<code>workspace</code>。</p><p>因为太多办法尝试过之后都无果，我甚至怀疑是电脑的问题，准备发Issue，但是我尝试着开了个新folder，随便写了个文件，<code>Intellisense</code>正常了。于是我将目光投向<code>workspace</code>，发现如下问题。</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs prolog"><span class="hljs-string">&quot;folders&quot;</span>: [<br>&#123;<br><span class="hljs-string">&quot;path&quot;</span>: <span class="hljs-string">&quot;../&quot;</span>,<br>&#125;,<br>&#123;<br><span class="hljs-string">&quot;gitlens&quot;</span>*************************<br>&#125;<br>],<br></code></pre></td></tr></table></figure><p>Folder里面<code>gitlens</code>的配置项。我去掉<code>gitlens</code>的配置项之后就没问题了，同时我也测试了增加别的文件夹，发现没问题，只是<code>gitlens</code>的配置项有问题。</p><h1 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h1><p>修改你的<code>workspace</code>配置文件，删除<code>folders</code>中的<code>gitlens</code>相关配置项。</p><p>具体<code>gitlens</code>配置项长什么样子我忘了，我只有一个项目出过这个问题。当时也没有备份文件。（谁会去备份问题文件啊</p>]]></content>
    
    
    <categories>
      
      <category>log</category>
      
      <category>c++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c++</tag>
      
      <tag>vscode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>方舟服务器 升级失败 服务器数据迁移</title>
    <link href="/2020/03/17/ark-server/"/>
    <url>/2020/03/17/ark-server/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于受朋友的鼓动，加上Steam的80%减价，入手了<code>Ark:Survival Evolved</code>，方舟：生存进化，成功成为Ark废人之一。为了和老铁们一起打游戏，用<code>Ark server manager</code>傻瓜式搭建了ark服务器。又因为没有公网IP，所以用白嫖的服务器搭建了内网穿透，把服务放到了公网上，终于和铁子们快乐地玩上了ark。</p><p>可是好景不长，Ark客户端他更新了一个大版本，从之之前的<code>v306</code>更新到了<code>v307</code>，而我服务器上的游戏版本还是<code>v306.81</code>，导致朋友们无法搜到我的服务器了。</p><p>这不行啊，为了可以继续开心玩游戏，我找了好多办法，终于解决了，现在分享给大家，让有这方面需求的人可以少走弯路。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>一般情况下，直接使用<code>Ark server manager</code><em>（以下称ASM）</em> 自带的更新按钮。但是如果你在输出的进程中发现如下字样(大概是这样，我已经把旧的配置文件删掉了，没法再现，要再现可能得等下一个大版本)</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[UPDATER] <span class="hljs-built_in">new</span> <span class="hljs-keyword">version</span>: <span class="hljs-keyword">FALSE</span><br></code></pre></td></tr></table></figure><p>那就说明你的自带更新功能有点小问题。我的解决方法是重新开一个服务器，然后把老服务器的数据迁移到新的服务器。</p><p>开新服的办法我就不用说了，网上有别的教程，我过几天可能会把我开服的过程记录一下。</p><h1 id="迁移方法"><a href="#迁移方法" class="headerlink" title="迁移方法"></a>迁移方法</h1><p>&#x3D;&#x3D;<strong>重点来了</strong>&#x3D;&#x3D;：<br>老服务器所有的<strong>玩家信息</strong>和<strong>备份</strong>包括当前的<strong>地图信息</strong>都保存在如下路径中</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">你的服务器安装位置\ShooterGame\<span class="hljs-built_in">Saved</span>\SavedArks<br></code></pre></td></tr></table></figure><p>其中包括</p><table><thead><tr><th>文件名</th><th>作用</th></tr></thead><tbody><tr><td>地图名称.ark</td><td>所有玩家创作的结晶</td></tr><tr><td>代号.arkprofile</td><td>UID为代号的玩家数据信息</td></tr><tr><td>代号.png</td><td>UID为代号的玩家图标</td></tr><tr><td>代号.profilebak</td><td>UID为代号的玩家数据信息备份（应该是吧，我从后缀猜的）</td></tr><tr><td>代号.arktribe</td><td>ID为代号的部落信息文件</td></tr><tr><td>***.bak</td><td>直接是某种备份</td></tr></tbody></table><p>只要将这个文件夹里的所有上述文件都移动&#x2F;复制到你新的服务器的相同目录下就完成服务器的信息迁移了。</p><p>注：为了保险起见，也可以把这个文件夹上级目录的<code>Config</code>文件夹也替换掉，这里面是游戏的一些配置，我当时为了保险也换掉了。</p>]]></content>
    
    
    <categories>
      
      <category>game</category>
      
    </categories>
    
    
    <tags>
      
      <tag>game</tag>
      
      <tag>transfer</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu安装记录及先安装linux(ubuntu)后安装windows的忠告</title>
    <link href="/2019/03/11/ubuntu-linux-windows/"/>
    <url>/2019/03/11/ubuntu-linux-windows/</url>
    
    <content type="html"><![CDATA[<p>@<a href="%E7%9B%AE%E5%BD%95">TOC</a></p><p>具体安装时间我本人也不记得了，当时折腾了好久。先是成功安装了18.04，但是初次接触ubuntu，我自认为搞坏了，重装了一次，然后蓝牙出问题，WLAN无法连接，拨号播不了。于是一狠心备份了windows的重要文件，然后安装了纯ubuntu系统，16.04LTS。这其中还有一段故事，我在18LTS上各种配置，vscode，vim，还想弄个Vmware，但是都因为兼容问题有些尬。于是安装纯ubuntu系统的时候，我选择了16LTS。</p><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p>根据我的经验，安装ubuntu系统有3种方式，接下来一一简单说明。</p><h3 id="通过虚拟机安装"><a href="#通过虚拟机安装" class="headerlink" title="通过虚拟机安装"></a>通过虚拟机安装</h3><p>很简单，直接去Ubuntu<a href="https://www.ubuntu.com/download/desktop">官方网站</a>下载镜像，可以去最新的版本页面下载最新的镜像文件（我这个时候是18LTS），也可以去下载<a href="https://www.ubuntu.com/download/alternative-downloads">比较旧的版本</a>。</p><p>下载好镜像文件之后，任意使用<strong>Vmware</strong>或者<strong>VirtualBox</strong>安装，这个网上有详细教程我就不一一赘述了。</p><h3 id="通过启动U盘或者光盘安装"><a href="#通过启动U盘或者光盘安装" class="headerlink" title="通过启动U盘或者光盘安装"></a>通过启动U盘或者光盘安装</h3><p>先下载UltraISO（软碟通）工具，将下载好的镜像文件通过UltraISO打开，插入U盘，写入硬盘映像，然后重启电脑，进入BIOS，用UEFI方式启动U盘，然后跟着系统的引导，可以试用，或者安装。</p><h3 id="在windows下的linux子系统"><a href="#在windows下的linux子系统" class="headerlink" title="在windows下的linux子系统"></a>在windows下的linux子系统</h3><p>windows也开始支持linux系统了，在应用商店里搜索想要的linux系统，安装打开就行。但是只有命令行界面。当然有大佬可以通过一些高级操作，完成图形化，有兴趣可以去搜索一下。</p><h2 id="二、安装的注意事项"><a href="#二、安装的注意事项" class="headerlink" title="二、安装的注意事项"></a>二、安装的注意事项</h2><p>一般人由于使用的需要，不会使用纯Ubuntu系统，都会采用双系统的方式安装，比如windows下虚拟机按装，或者windows下的linux子系统，又或者都直接安装到硬盘上。由于前二者较简单，不做赘述，<strong>我要提醒的是</strong>,直接在硬盘上安装双系统的时候，难免会遇到引导问题。如果是先安装windows再安装linux的时候还好说，ubuntu的grub2可以完美解决引导问题。<strong>如果是先安装linux再安装windows系统的话，特别要注意引导问题</strong>。后按装windows的时候，如果不小心（我也还不知道如何避免），会覆盖原来linux系统的引导记录，<strong>然后你的linux系统就找不到了（躺）</strong>（别问我怎么知道的）。</p><p>如果不幸犯了这样的错误，别慌，拿出做好的ubuntu系统安装盘，进入try模式，想办法连上网，打开Terminal，执行以下操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-add-repository ppa:yannubuntu/boot-repair<br><span class="hljs-built_in">sudo</span> apt-get update<br><span class="hljs-built_in">sudo</span> apt-get install boot-repair<br>boot-repair<br></code></pre></td></tr></table></figure><p>安装成功之后跟着引导走就可以了。</p>]]></content>
    
    
    <categories>
      
      <category>log</category>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
